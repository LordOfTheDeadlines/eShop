version: '3.4'

services:

  nginx.admin:
    image: nginx

  nginx.shop:
    image: nginx

  rabbitmq:
    image: rabbitmq:3-management

  catalogdb:
    image: mongo

  admindb:
    image: postgres


  admin.api:
    image: ${DOCKER_REGISTRY-}admin.api
    build:
      context: .
      dockerfile: Services/Admin/Admin.API/Dockerfile
  


  adminwebapp:
    image: ${DOCKER_REGISTRY-}adminwebapp
    build:
      context: .
      dockerfile: WebApps/Admin/AdminWebApp/Dockerfile


  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  catalog.worker:
    image: ${DOCKER_REGISTRY-}catalogworker
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.Worker/Dockerfile

  shopwebapp:
    image: ${DOCKER_REGISTRY-}shopwebapp
    build:
      context: .
      dockerfile: WebApps/Shop/ShopWebApp/Dockerfile

  identitydb:
    image: mcr.microsoft.com/mssql/server

  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: ApiGateway/OcelotApiGw/Dockerfile

  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: Services/Identity4/Identity.API/Dockerfile

volumes:
  postgres_data:
  mongo_data:










